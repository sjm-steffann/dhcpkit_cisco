# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-12 18:30
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models

import dhcpkit_cisco.ipv6.remote_id_mapper.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_nr', dhcpkit_cisco.ipv6.remote_id_mapper.fields.ModuleField(default=0)),
            ],
            options={
                'verbose_name': ' Module',
                'ordering': ('slot__switch__name', 'slot__slot_nr', 'module_nr'),
                'verbose_name_plural': ' Modules',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_nr', dhcpkit_cisco.ipv6.remote_id_mapper.fields.PortField()),
                ('vlan', dhcpkit_cisco.ipv6.remote_id_mapper.fields.VlanField(default=0,
                                                                              help_text='VLAN 0 is a wildcard that matches any VLAN',
                                                                              verbose_name='VLAN')),
                ('new_enterprise_number', dhcpkit_cisco.ipv6.remote_id_mapper.fields.EnterpriseNumberField()),
                ('new_remote_id', dhcpkit_cisco.ipv6.remote_id_mapper.fields.RemoteIdField(max_length=512)),
                (
                    'module',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_id_mapper.Module')),
            ],
            options={
                'verbose_name': 'Port',
                'ordering': (
                    'module__slot__switch__name', 'module__slot__slot_nr', 'module__module_nr', 'port_nr', 'vlan'),
                'verbose_name_plural': 'Ports',
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_nr', dhcpkit_cisco.ipv6.remote_id_mapper.fields.SlotField()),
                ('has_modules', models.BooleanField(default=False,
                                                    help_text='Check this box if this slot has multiple (internal) modules. If unchecked one dummy-module will automatically be created, which you can ignore.')),
            ],
            options={
                'verbose_name': '  Slot',
                'ordering': ('switch__name', 'slot_nr'),
                'verbose_name_plural': '  Slots',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('duid', dhcpkit_cisco.ipv6.remote_id_mapper.fields.HexField(
                    help_text="Use 'show ipv6 dhcp' to find the switch's DUID", max_length=256, verbose_name='DUID')),
            ],
            options={
                'verbose_name': '   Switch',
                'verbose_name_plural': '   Switches',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='slot',
            name='switch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_id_mapper.Switch'),
        ),
        migrations.AddField(
            model_name='module',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_id_mapper.Slot'),
        ),
        migrations.AlterUniqueTogether(
            name='slot',
            unique_together={('switch', 'slot_nr')},
        ),
        migrations.AlterUniqueTogether(
            name='port',
            unique_together={('module', 'port_nr', 'vlan')},
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('slot', 'module_nr')},
        ),
    ]
